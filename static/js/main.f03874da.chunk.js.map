{"version":3,"sources":["components/Analogico.js","components/Digital.js","functions/textToSpeech.js","components/Literal.js","functions/horaCerta.js","index.js"],"names":["Analogico","props","period","hr","parseInt","min","document","body","classList","add","angleMin","styleHr","transform","styleMin","className","style","Digital","label","sec","useState","modo24h","setModo24h","onClick","textToSpeech","param","window","msg","SpeechSynthesisUtterance","voices","speechSynthesis","getVoices","text","voice","rate","pitch","speak","Literal","horas","minutos","preposicao","proxHr","periodo","extenso","arrHr","arrMin","id","replace","horaCerta","time","Date","getSeconds","getMinutes","getHours","setInterval","element","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.f03874da.chunk.js","sourcesContent":["/* ah - 02jun20 */\n\nimport React from 'react';\n\nexport const Analogico = (props) => {\n  let hr = parseInt(props.hr)\n  let min = parseInt(props.min)\n  let period\n\n  hr>6 && hr<19 ? period=\"day\" : period=\"night\"\n\n  document.body.classList.add(period);\n\n  if (hr>12) hr = hr-12\n  else if (!hr) hr = 12\n\n  let angleHr =  hr*30+min/2\n  let angleMin = min*6\n  let styleHr =  {transform: `translate(-50%, -50%) rotate(${angleHr}deg)`}\n  let styleMin = {transform: `translate(-50%, -50%) rotate(${angleMin}deg)`}\n\n  return (\n    <div className=\"modulo analogico tam-relogio\">\n      <div className=\"ponteiro hora tam-relogio\" style={styleHr}></div>\n      <div className=\"ponteiro minuto tam-relogio\" style={styleMin}></div>\n    </div>\n  )\n}","/* ah - 02jun20 */\n\nimport React, {useState} from 'react'\n\nexport const Digital = (props) => {\n   let hr = parseInt(props.hr)\n   let min = parseInt(props.min)\n   let sec = parseInt(props.sec)\n   let label\n\n   const [modo24h, setModo24h] = useState(true)\n   \n   modo24h ? label = \"24H\" : hr>11?label=\"PM\":label=\"AM\"\n\n   if (!modo24h)\n      if (hr>12) hr = hr-12\n      else if (!hr) hr = 12\n\n   return (\n      <>\n         <button className=\"btn btn-ampm\" onClick={() => setModo24h(!modo24h)}>{label}</button>\n         <div className=\"modulo digital\">{hr}<span className={sec%2?\"even\":\"odd\"}> : </span>{min<10?\"0\":\"\"}{min}</div>\n      </>\n   )\n}\n\n\n","export const textToSpeech = (param) => {\n      if ('speechSynthesis' in window) {\n            const msg = new SpeechSynthesisUtterance()\n            const voices = window.speechSynthesis.getVoices()\n            msg.text = param\n            msg.voice = voices[0]\n            msg.rate = 2\n            msg.pitch = 0\n            if (param) speechSynthesis.speak(msg)\n      }\n}\n\ntextToSpeech()\n","/* ah - 02jun20 */\n\nimport React from 'react'\nimport { textToSpeech } from '../functions/textToSpeech'\n\nexport const Literal = (props) => {\n  let hr = parseInt(props.hr)\n  let min = parseInt(props.min)\n  let horas, minutos, preposicao, proxHr, periodo, extenso\n  \n  let arrHr = ['meia-noite','uma,','duas,','três,','quatro,','cinco,','seis,','sete','oito','nove,','dez,','onze,','meio-dia']\n  let arrMin = ['meia','um','dois','três','quatro','cinco','seis','sete','oito','nove','dez','onze','doze','treze','catorze','quinze','dezesseis','dezessete','dezoito','dezenove','vinte','trinta','quarenta','cinquenta']\n\n  if (!hr || hr===12)  periodo = \"\"\n  else if (hr>18)      periodo = \" da noite\"\n  else if (hr>12)      periodo = \" da tarde\"\n  else                 periodo = \" da manhã\"\n\n  if (!hr || hr===12 || hr===23) preposicao = \"a\"\n  else if (hr===11)              preposicao = \"o\"\n  else                           preposicao = \"as\"\n\n  if (hr>12 && hr<23) hr = hr-12\n  hr===23 ? horas = arrHr[11] : horas = arrHr[hr]\n\n  switch (hr) { // hora seguinte\n    case 12: proxHr = arrHr[1]; break\n    case 23: proxHr = arrHr[0]; break\n    default: proxHr = arrHr[hr+1]\n  }\n\n  if (min>=20 && min<=29)       minutos = arrMin[20]\n  else if (min>30 && min<=39)   minutos = arrMin[21]\n  else if (min>=40 && min<=49)  minutos = arrMin[22]\n  else if (min>=50 && min<=59)  minutos = arrMin[23]\n  else if (min===30)            minutos = arrMin[0]\n  else                          minutos = arrMin[min]\n\n  if(min>20 && min%10>0)        minutos += ` e ${arrMin[min%10]}`\n\n  if (min===40 || min===45 || min===50 || min===55) extenso = `${arrMin[60-min]} para ${preposicao} ${proxHr}`\n  else if (!min)                                    extenso = horas+periodo\n  else                                              extenso = `${horas} e ${minutos}`\n  \n  return (\n    <>\n      <button id=\"btn-voice\" className=\"btn btn-voice\" onClick={() => textToSpeech(extenso)}>Falar !</button>\n      <div className=\"modulo literal\">{extenso.replace(',','')}</div>\n    </>\n  )\n}\n\n","/* ah - 02jun20 */\n\nexport const horaCerta = (param) => {\n  const time = new Date()\n  let now\n \n  if (param === \"sec\")       now = time.getSeconds()\n  else if (param === \"min\")  now = time.getMinutes()\n  else                       now = time.getHours()\n\n  return now\n}\n","/* ah - 02jun20 */\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Analogico } from './components/Analogico';\nimport { Digital } from './components/Digital';\nimport { Literal } from './components/Literal';\n\nimport { horaCerta } from './functions/horaCerta'\nimport './css/style.css'\n\n  let execAPP = () => {\n\n    const hr = horaCerta(\"hr\")\n    const min = horaCerta(\"min\")\n    const sec = horaCerta(\"sec\")\n\n    const element = (\n      <div className=\"relogio\">\n        <Analogico hr={hr} min={min} />\n        <Digital hr={hr} min={min} sec={sec} />\n        <Literal hr={hr} min={min} />\n      </div>\n    )\n    ReactDOM.render(element, document.getElementById('root'))\n  } \n\n  setInterval(execAPP, 1000)\n\n\n"],"sourceRoot":""}